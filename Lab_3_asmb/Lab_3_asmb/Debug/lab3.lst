Microsoft (R) Macro Assembler Version 14.29.30148.0	    11/13/23 22:27:36
lab3.asm						     Page 1 - 1


				.586P
				.MODEL FLAT, STDCALL
				includelib kernel32.lib
				
				ExitProcess PROTO :DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD
				
				.STACK 4096
				
 00000000			.CONST
				
 00000000			.DATA
 00000000 10 20 30 40			myBytes BYTE 10h, 20h, 30h, 40h					; 1 байт
 00000004 008A 0044 003B		myWords WORD 8Ah, 44h, 3Bh, 5Fh, 99h			; 2 байта
	   005F 0099
					
				
 0000000E 00000001			massive DWORD 1, 2, 3, 4, 5, 6, 7				; массив из 7 чисел, для задания с)
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
	   00000007
 0000002A 00000000			sumOfElements DWORD 0							; сумма элементов массива, для задания с)
					
 0000002E C1 FB F7 EA EE		STR1 DB "Бычковская Виктория Александровна, 5 ", 0			
	   E2 F1 EA E0 FF
	   20 C2 E8 EA F2
	   EE F0 E8 FF 20
	   C0 EB E5 EA F1
	   E0 ED E4 F0 EE
	   E2 ED E0 2C 20
	   35 20 00
 00000054 C5 F1 F2 FC 20		STR2 DB "Есть нулевой элемент", 0 
	   ED F3 EB E5 E2
	   EE E9 20 FD EB
	   E5 EC E5 ED F2
	   00
 00000069 CD F3 EB E5 E2		STR3 DB "Нулевого элемента не найдено", 0 
	   EE E3 EE 20 FD
	   EB E5 EC E5 ED
	   F2 E0 20 ED E5
	   20 ED E0 E9 E4
	   E5 ED EE 00
				
 00000000			.CODE
				
 00000000			main PROC
 00000000			start: 
 00000000  BE 00000004 R		mov ESI, OFFSET myWords
 00000005  66| 8B 46 04			mov AX, [ESI + 4] ; 3Bh
 00000009  66| 8B 5E 02			mov BX, [ESI + 2] ; 44h
				
					;Вычислить сумму элементов массива. Результат запомнить в регистре EAX.
 0000000D  BE 0000000E R		mov ESI, OFFSET massive
 00000012  B9 00000007			mov ECX, lengthof massive						; сугубо счётчик
 00000017  BB 00000001			mov EBX, 1
				
 0000001C			CYCLE:
 0000001C  8B 06			mov EAX, [ESI]									; EAX = massive[ESI], ESI = massive[0]
 0000001E  01 05 0000002A R		add sumOfElements, EAX							; sumOfElements = sumOfElements + EAX, добавляем то, что в EAX
 00000024  83 C6 04			add ESI, type massive							; +4 байта
 00000027  83 F8 00			cmp EAX, 0										; само сравнение
 0000002A  74 04			jz ZERO
 0000002C  E2 EE			loop CYCLE										; ECX--, if (ECX != 0) goto CYCLE
 0000002E  EB 07			jmp ALLOK										; if massive!=0 goto ALLOK
				
 00000030			ZERO:
 00000030  BB 00000000			mov EBX, 0	
 00000035  74 07			jz ZD1
				
 00000037			ALLOK:
 00000037  A1 0000002A R		mov eax, sumOfElements	
 0000003C  75 1A			jnz ZD2
				
				
 0000003E			ZD1:
					INVOKE MessageBoxA, 0, OFFSET Str2, OFFSET Str1, 1
					INVOKE ExitProcess, 2
				
 00000058			ZD2:
					INVOKE MessageBoxA, 0, OFFSET Str3, OFFSET Str1, 1
					INVOKE ExitProcess, 2
					
 00000072  6A 00		push 0
 00000074  E8 00000000 E	call ExitProcess
				
 00000079			main ENDP
				
				end main
Microsoft (R) Macro Assembler Version 14.29.30148.0	    11/13/23 22:27:36
lab3.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000086 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000079 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000079 Public STDCALL
  start  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 0000001C _TEXT	
  ZERO . . . . . . . . . . . . .	L Near	 00000030 _TEXT	
  ALLOK  . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  ZD1  . . . . . . . . . . . . .	L Near	 0000003E _TEXT	
  ZD2  . . . . . . . . . . . . .	L Near	 00000058 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
STR1 . . . . . . . . . . . . . .	Byte	 0000002E _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 00000054 _DATA	
STR3 . . . . . . . . . . . . . .	Byte	 00000069 _DATA	
massive  . . . . . . . . . . . .	DWord	 0000000E _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	
sumOfElements  . . . . . . . . .	DWord	 0000002A _DATA	

	   0 Warnings
	   0 Errors
